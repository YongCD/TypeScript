{
  "compilerOptions": {
    // ========== 输出配置 ==========
    // 输出目录：编译后的 JavaScript 文件存放位置
    "outDir": "./dist",

    // ========== 模块配置 ==========
    // 模块系统：使用最新的 ES 模块语法（import/export）
    "module": "esnext",

    // 编译目标：将 TypeScript 编译为 ES5 JavaScript，兼容旧浏览器
    "target": "es5",

    // 类型库：包含 ES6、DOM、ES2016、ES2017 的类型定义
    // - es6: ES2015 标准库（Promise、Map、Set 等）
    // - dom: 浏览器 DOM API（window、document、performance 等）
    // - es2016: 包含 Array.prototype.includes 等
    // - es2017: 包含 Object.entries、Object.values、async/await 等
    "lib": ["es6", "dom", "es2016", "es2017"],

    // ========== 调试配置 ==========
    // 生成 source map 文件，方便在浏览器中调试时映射回 TypeScript 源码
    "sourceMap": true,

    // 生成 .d.ts 类型声明文件，供其他 TypeScript 项目使用
    "declaration": true,

    // ========== 模块解析配置 ==========
    // 模块解析策略：使用 Node.js 的模块解析算法
    "moduleResolution": "node",

    // ========== 严格类型检查 ==========
    // 函数必须有明确的返回值（不能隐式返回 undefined）
    "noImplicitReturns": true,

    // this 必须有明确的类型（不能隐式为 any）
    "noImplicitThis": true,

    // 所有变量、参数、返回值必须有明确的类型注解
    "noImplicitAny": true,

    // 开启严格的 null 和 undefined 检查
    "strictNullChecks": true,

    // ========== 代码质量检查 ==========
    // 声明但未使用的局部变量会报错
    "noUnusedLocals": true,

    // 声明但未使用的函数参数会报错（可在参数前加 _ 忽略）
    "noUnusedParameters": true,

    // ========== 互操作性配置 ==========
    // 允许使用 CommonJS 模块的默认导入方式（import React from 'react'）
    "esModuleInterop": true,

    // 允许从没有默认导出的模块中默认导入
    "allowSyntheticDefaultImports": true,

    // ========== 装饰器配置 ==========
    // 启用实验性的装饰器语法（@decorator）
    "experimentalDecorators": true,

    // 为装饰器生成元数据，用于反射（配合 reflect-metadata 使用）
    "emitDecoratorMetadata": true
  },

  // 包含的文件：仅编译 src 目录下的 TypeScript 文件
  "include": ["src"],

  // 排除的目录：不编译 node_modules 和 dist 目录
  "exclude": ["node_modules", "dist"]
}
